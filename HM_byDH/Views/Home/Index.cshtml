@using HM_byDH.Models.ViewModels.Home
@model HomeViewModel

@{
    ViewData["Title"] = "Trang Chủ";
}

<!-- CSS tùy chỉnh -->
<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #f4f6f9;
    }

    .container {
        max-width: 1200px;
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease;
    }

        .card:hover {
            transform: translateY(-5px);
        }

    .card-header {
        background-color: #007bff;
        color: white;
        border-radius: 10px 10px 0 0;
        font-weight: bold;
        padding: 15px;
    }

    .btn-custom {
        background-color: #28a745;
        color: white;
        border-radius: 5px;
        padding: 8px 15px;
    }

        .btn-custom:hover {
            background-color: #218838;
            color: white;
        }

    .info-item {
        margin: 10px 0;
        font-size: 1.1em;
    }

    .progress-bar {
        height: 20px;
        border-radius: 10px;
    }

    .chart-container {
        position: relative;
        height: 300px;
        width: 100%;
    }

    .welcome-text {
        font-size: 1.5em;
        color: #333;
    }
</style>

<!-- Nội dung chính -->
<div class="container mt-5">
    <h1 class="text-center mb-4">Chào Mừng Đến Với HM_byDH</h1>

    @if (Model.IsLoggedIn)
    {
        <div class="row">
            <!-- Thông tin sức khỏe -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">Thông Tin Sức Khỏe</div>
                    <div class="card-body">
                        <p class="welcome-text">Xin chào, @Model.UserName!</p>
                        <div class="info-item">
                            <strong>Cân nặng hiện tại:</strong> @Model.CurrentWeight.ToString("F1") kg
                        </div>
                        <div class="info-item">
                            <strong>Calo duy trì:</strong> @Model.MaintenanceCalories.ToString("F0") calo
                        </div>
                        @if (Model.TargetWeight > 0)
                        {
                            <div class="info-item">
                                <strong>Cân nặng mục tiêu:</strong> @Model.TargetWeight.ToString("F1") kg
                            </div>
                            <div class="info-item">
                                <strong>Calo mục tiêu hàng ngày:</strong> @Model.DailyCaloriesTarget.ToString("F0") calo
                            </div>
                            <div class="info-item">
                                <strong>Tiến độ:</strong> @Model.ProgressPercentage.ToString("F1")%
                                <div class="progress mt-2">
                                    <div class="progress-bar bg-success" role="progressbar" style="width: @Model.ProgressPercentage%;" aria-valuenow="@Model.ProgressPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>
                        }
                        <div class="info-item">
                            <strong>Calo đốt cháy tuần này:</strong> @Model.TotalCaloriesBurnedThisWeek.ToString("F0") calo
                        </div>
                        <div class="d-flex justify-content-between mt-4">
                            <a asp-controller="Health" asp-action="AddWeightLog" class="btn btn-custom">Thêm Cân Nặng</a>
                            <a asp-controller="Health" asp-action="SetWeightGoal" class="btn btn-custom">Đặt Mục Tiêu</a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Biểu đồ -->
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-header">Xu Hướng Cân Nặng</div>
                    <div class="card-body">
                        <div class="chart-container">
                            <canvas id="weightChart"></canvas>
                        </div>
                    </div>
                </div>
                @if (Model.TargetWeight > 0)
                {
                    <div class="card">
                        <div class="card-header">Tiến Độ Mục Tiêu</div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="progressChart"></canvas>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <p class="fs-4">Vui lòng <a asp-controller="Account" asp-action="Login" class="text-primary">đăng nhập</a> để bắt đầu theo dõi sức khỏe của bạn.</p>
        </div>
    }
</div>

<!-- Thư viện Bootstrap, Chart.js và Google Fonts -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM" crossorigin="anonymous">
<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>

<!-- Script để vẽ biểu đồ -->
@if (Model.IsLoggedIn)
{
    <script>
        // Biểu đồ cân nặng
        const weightCtx = document.getElementById('weightChart').getContext('2d');
        const weightChart = new Chart(weightCtx, {
            type: 'line',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.WeightLogs.Select(w => $"'{w.Date:dd/MM}'")))],
                datasets: [{
                    label: 'Cân nặng (kg)',
                    data: [@Html.Raw(string.Join(",", Model.WeightLogs.Select(w => w.Weight)))],
                    borderColor: '#007bff',
                    backgroundColor: 'rgba(0, 123, 255, 0.1)',
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: false, title: { display: true, text: 'Cân nặng (kg)' } },
                    x: { title: { display: true, text: 'Ngày' } }
                }
            }
        });

        // Biểu đồ tiến độ (nếu có mục tiêu)
        @if (Model.TargetWeight > 0)
        {
            <text>
                    const progressCtx = document.getElementById('progressChart').getContext('2d');
                    const progressChart = new Chart(progressCtx, {
                        type: 'doughnut',
                        data: {
                            labels: ['Đã đạt', 'Còn lại'],
                            datasets: [{
                                data: [@Model.ProgressPercentage, 100 - @Model.ProgressPercentage],
                                backgroundColor: ['#28a745', '#e9ecef'],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: { position: 'bottom' },
                                title: { display: true, text: 'Tiến độ mục tiêu' }
                            }
                        }
                    });
            </text>
        }
    </script>
}